[tool.poetry]
name = "sdcat"
version = "1.14.0"
description = "Sliced Detection and Clustering Analysis Toolkit - Developed by MBARI"
authors = [
    "Danelle Cline <dcline@mbari.org>",
    "Duane Edgington <duane@mbari.org>",
    "Fernanda Lecaros Saavedra <fernandalecaros@mbari.org>",
]
license = "Apache"
readme = "README.md"
packages = [
    { include = "sdcat" }
]
exclude = ["tests"]

[tool.poetry.scripts]
sdcat = "sdcat.__main__:cli"

[tool.semantic_release]
branch = "main"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
upload_to_PyPI = false
upload_to_release = true
tag_format = "v{version}"
commit_version_number = true
allow_zero_version = true
commit_parser = "angular"
logging_use_named_masks = true
major_on_zero = true
assets = []
version_variables = ["sdcat/__init__.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]
build_command = "pip install poetry && poetry build"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test"
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]


[tool.poetry.dependencies]
python = ">=3.9,<3.12"
click = "8.1.7"
hdbscan = "0.8.37"
huggingface-hub = "0.24.0"
matplotlib = "3.7.0"
numpy = "1.24.4"
opencv-contrib-python-headless = "4.10.0.84"
opencv-python-headless = "4.10.0.84"
pandas = "2.2.2"
pillow = "10.4.0"
pyephem = "9.99"
pytz = "2024.1"
sahi = "^0.11.18"
scikit-learn = "1.4.0rc1"
scikit-image = "^0.24.0"
seaborn = "0.13.2"
torch = "2.3.1"
torchvision = "0.18.1"
tqdm = "4.66.4"
transformers = "4.42.4"
umap-learn = "0.5.5"

ephem = "^4.1.6"
cleanvision = "^0.3.6"
[tool.poetry.group.dev.dependencies]
build = "^1.2.1"
twine = "^5.1.1"
pytest = "^7.0.1"

[tool.poetry.extras]
rapids = ["cuml"]
display = ["opencv-python"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests",]
pythonpath = ["."]

[tool.ruff]
line-length = 125