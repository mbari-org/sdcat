name: New Release
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  semantic_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        id: semantic
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish PyPi
        if: steps.semantic.outputs.released == 'true'
        run: |
          pip install poetry
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish --build

      - name: docker push version
        if: steps.semantic.outputs.released == 'true'
        run: |
          export RELEASE_VERSION=$(echo ${{ steps.semantic.outputs.tag }} | cut -c 2-)
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} 
          docker buildx create --name mybuilder --platform linux/amd64,linux/arm64 --use
          cd docker && \
          docker buildx build --push --platform linux/amd64 -t mbari/sdcat:$RELEASE_VERSION-cuda124  --label IMAGE_URI=mbari/sdcat:$RELEASE_VERSION-cuda124 -f Dockerfile.cuda12 .
          docker buildx build --push --platform linux/amd64,linux/arm64 -t mbari/sdcat:$RELEASE_VERSION  --label IMAGE_URI=mbari/sdcat:$RELEASE_VERSION -f Dockerfile .
  push_readme_to_dockerhub:
    runs-on: ubuntu-latest
    name: Push README to Docker Hub
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          destination_container_repo: mbari/sdcat:latest
          provider: dockerhub
          short_description: 'Sliced Detection and Clustering Analysis Toolkit (SDCAT)'
          readme_file: 'README.md'
